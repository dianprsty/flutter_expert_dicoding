// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/presentation/pages/home_movie_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:ui' as _i16;

import 'package:ditonton/common/state_enum.dart' as _i13;
import 'package:ditonton/domain/entities/movie.dart' as _i12;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i10;
import 'package:ditonton/domain/usecases/movies/get_movie_detail.dart' as _i5;
import 'package:ditonton/domain/usecases/movies/get_movie_recommendations.dart'
    as _i6;
import 'package:ditonton/domain/usecases/movies/get_now_playing_movies.dart'
    as _i2;
import 'package:ditonton/domain/usecases/movies/get_popular_movies.dart' as _i3;
import 'package:ditonton/domain/usecases/movies/get_top_rated_movies.dart'
    as _i4;
import 'package:ditonton/domain/usecases/movies/get_watchlist_status.dart'
    as _i7;
import 'package:ditonton/domain/usecases/movies/remove_watchlist.dart' as _i9;
import 'package:ditonton/domain/usecases/movies/save_watchlist.dart' as _i8;
import 'package:ditonton/presentation/provider/movie/movie_detail_notifier.dart'
    as _i17;
import 'package:ditonton/presentation/provider/movie/movie_list_notifier.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetNowPlayingMovies_0 extends _i1.SmartFake
    implements _i2.GetNowPlayingMovies {
  _FakeGetNowPlayingMovies_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularMovies_1 extends _i1.SmartFake
    implements _i3.GetPopularMovies {
  _FakeGetPopularMovies_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedMovies_2 extends _i1.SmartFake
    implements _i4.GetTopRatedMovies {
  _FakeGetTopRatedMovies_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieDetail_3 extends _i1.SmartFake
    implements _i5.GetMovieDetail {
  _FakeGetMovieDetail_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieRecommendations_4 extends _i1.SmartFake
    implements _i6.GetMovieRecommendations {
  _FakeGetMovieRecommendations_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchListStatus_5 extends _i1.SmartFake
    implements _i7.GetWatchListStatus {
  _FakeGetWatchListStatus_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlist_6 extends _i1.SmartFake implements _i8.SaveWatchlist {
  _FakeSaveWatchlist_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlist_7 extends _i1.SmartFake
    implements _i9.RemoveWatchlist {
  _FakeRemoveWatchlist_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetail_8 extends _i1.SmartFake implements _i10.MovieDetail {
  _FakeMovieDetail_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListNotifier extends _i1.Mock implements _i11.MovieListNotifier {
  MockMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingMovies get getNowPlayingMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getNowPlayingMovies),
            returnValue: _FakeGetNowPlayingMovies_0(
              this,
              Invocation.getter(#getNowPlayingMovies),
            ),
          )
          as _i2.GetNowPlayingMovies);

  @override
  _i3.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularMovies),
            returnValue: _FakeGetPopularMovies_1(
              this,
              Invocation.getter(#getPopularMovies),
            ),
          )
          as _i3.GetPopularMovies);

  @override
  _i4.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedMovies),
            returnValue: _FakeGetTopRatedMovies_2(
              this,
              Invocation.getter(#getTopRatedMovies),
            ),
          )
          as _i4.GetTopRatedMovies);

  @override
  List<_i12.Movie> get nowPlayingMovies =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingMovies),
            returnValue: <_i12.Movie>[],
          )
          as List<_i12.Movie>);

  @override
  _i13.RequestState get nowPlayingState =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.Movie> get popularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#popularMovies),
            returnValue: <_i12.Movie>[],
          )
          as List<_i12.Movie>);

  @override
  _i13.RequestState get popularMoviesState =>
      (super.noSuchMethod(
            Invocation.getter(#popularMoviesState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.Movie> get topRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedMovies),
            returnValue: <_i12.Movie>[],
          )
          as List<_i12.Movie>);

  @override
  _i13.RequestState get topRatedMoviesState =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedMoviesState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchNowPlayingMovies, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> fetchPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularMovies, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> fetchTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedMovies, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i17.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetMovieDetail get getMovieDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieDetail),
            returnValue: _FakeGetMovieDetail_3(
              this,
              Invocation.getter(#getMovieDetail),
            ),
          )
          as _i5.GetMovieDetail);

  @override
  _i6.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieRecommendations),
            returnValue: _FakeGetMovieRecommendations_4(
              this,
              Invocation.getter(#getMovieRecommendations),
            ),
          )
          as _i6.GetMovieRecommendations);

  @override
  _i7.GetWatchListStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchListStatus_5(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i7.GetWatchListStatus);

  @override
  _i8.SaveWatchlist get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlist_6(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i8.SaveWatchlist);

  @override
  _i9.RemoveWatchlist get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlist_7(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i9.RemoveWatchlist);

  @override
  _i10.MovieDetail get movie =>
      (super.noSuchMethod(
            Invocation.getter(#movie),
            returnValue: _FakeMovieDetail_8(this, Invocation.getter(#movie)),
          )
          as _i10.MovieDetail);

  @override
  _i13.RequestState get movieState =>
      (super.noSuchMethod(
            Invocation.getter(#movieState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.Movie> get movieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#movieRecommendations),
            returnValue: <_i12.Movie>[],
          )
          as List<_i12.Movie>);

  @override
  _i13.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMovieDetail, [id]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> addWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [movie]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> removeFromWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [movie]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> loadWatchlistStatus(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
