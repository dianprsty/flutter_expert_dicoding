// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/presentation/pages/home_tv_series_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:ui' as _i16;

import 'package:ditonton/common/state_enum.dart' as _i13;
import 'package:ditonton/domain/entities/tv_series.dart' as _i12;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i10;
import 'package:ditonton/domain/usecases/tv_series/get_on_the_air_tv_series.dart'
    as _i2;
import 'package:ditonton/domain/usecases/tv_series/get_popular_tv_series.dart'
    as _i3;
import 'package:ditonton/domain/usecases/tv_series/get_top_rated_tv_series.dart'
    as _i4;
import 'package:ditonton/domain/usecases/tv_series/get_tv_series_detail.dart'
    as _i5;
import 'package:ditonton/domain/usecases/tv_series/get_tv_series_recommendations.dart'
    as _i6;
import 'package:ditonton/domain/usecases/tv_series/get_watchlist_tv_status.dart'
    as _i7;
import 'package:ditonton/domain/usecases/tv_series/remove_watchlist_tv.dart'
    as _i9;
import 'package:ditonton/domain/usecases/tv_series/save_watchlist_tv.dart'
    as _i8;
import 'package:ditonton/presentation/provider/tv_series/tv_series_detail_notifier.dart'
    as _i17;
import 'package:ditonton/presentation/provider/tv_series/tv_series_list_notifier.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetOnTheAirTvSeries_0 extends _i1.SmartFake
    implements _i2.GetOnTheAirTvSeries {
  _FakeGetOnTheAirTvSeries_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularTvSeries_1 extends _i1.SmartFake
    implements _i3.GetPopularTvSeries {
  _FakeGetPopularTvSeries_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvSeries_2 extends _i1.SmartFake
    implements _i4.GetTopRatedTvSeries {
  _FakeGetTopRatedTvSeries_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvSeriesDetail_3 extends _i1.SmartFake
    implements _i5.GetTvSeriesDetail {
  _FakeGetTvSeriesDetail_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvSeriesRecommendations_4 extends _i1.SmartFake
    implements _i6.GetTvSeriesRecommendations {
  _FakeGetTvSeriesRecommendations_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistTvStatus_5 extends _i1.SmartFake
    implements _i7.GetWatchlistTvStatus {
  _FakeGetWatchlistTvStatus_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistTv_6 extends _i1.SmartFake
    implements _i8.SaveWatchlistTv {
  _FakeSaveWatchlistTv_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistTv_7 extends _i1.SmartFake
    implements _i9.RemoveWatchlistTv {
  _FakeRemoveWatchlistTv_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvSeriesDetail_8 extends _i1.SmartFake
    implements _i10.TvSeriesDetail {
  _FakeTvSeriesDetail_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TvSeriesListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesListNotifier extends _i1.Mock
    implements _i11.TvSeriesListNotifier {
  MockTvSeriesListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetOnTheAirTvSeries get getOnTheAirTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getOnTheAirTvSeries),
            returnValue: _FakeGetOnTheAirTvSeries_0(
              this,
              Invocation.getter(#getOnTheAirTvSeries),
            ),
          )
          as _i2.GetOnTheAirTvSeries);

  @override
  _i3.GetPopularTvSeries get getPopularTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularTvSeries),
            returnValue: _FakeGetPopularTvSeries_1(
              this,
              Invocation.getter(#getPopularTvSeries),
            ),
          )
          as _i3.GetPopularTvSeries);

  @override
  _i4.GetTopRatedTvSeries get getTopRatedTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedTvSeries),
            returnValue: _FakeGetTopRatedTvSeries_2(
              this,
              Invocation.getter(#getTopRatedTvSeries),
            ),
          )
          as _i4.GetTopRatedTvSeries);

  @override
  List<_i12.TvSeries> get nowPlayingTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingTvSeries),
            returnValue: <_i12.TvSeries>[],
          )
          as List<_i12.TvSeries>);

  @override
  _i13.RequestState get nowPlayingState =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.TvSeries> get popularTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#popularTvSeries),
            returnValue: <_i12.TvSeries>[],
          )
          as List<_i12.TvSeries>);

  @override
  _i13.RequestState get popularTvSeriesState =>
      (super.noSuchMethod(
            Invocation.getter(#popularTvSeriesState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.TvSeries> get topRatedTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedTvSeries),
            returnValue: <_i12.TvSeries>[],
          )
          as List<_i12.TvSeries>);

  @override
  _i13.RequestState get topRatedTvSeriesState =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedTvSeriesState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchOnTheAirTvSeries() =>
      (super.noSuchMethod(
            Invocation.method(#fetchOnTheAirTvSeries, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> fetchPopularTvSeries() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularTvSeries, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> fetchTopRatedTvSeries() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedTvSeries, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TvSeriesDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesDetailNotifier extends _i1.Mock
    implements _i17.TvSeriesDetailNotifier {
  MockTvSeriesDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetTvSeriesDetail get getTvSeriesDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getTvSeriesDetail),
            returnValue: _FakeGetTvSeriesDetail_3(
              this,
              Invocation.getter(#getTvSeriesDetail),
            ),
          )
          as _i5.GetTvSeriesDetail);

  @override
  _i6.GetTvSeriesRecommendations get getTvSeriesRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getTvSeriesRecommendations),
            returnValue: _FakeGetTvSeriesRecommendations_4(
              this,
              Invocation.getter(#getTvSeriesRecommendations),
            ),
          )
          as _i6.GetTvSeriesRecommendations);

  @override
  _i7.GetWatchlistTvStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchlistTvStatus_5(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i7.GetWatchlistTvStatus);

  @override
  _i8.SaveWatchlistTv get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlistTv_6(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i8.SaveWatchlistTv);

  @override
  _i9.RemoveWatchlistTv get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlistTv_7(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i9.RemoveWatchlistTv);

  @override
  _i10.TvSeriesDetail get tvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#tvSeries),
            returnValue: _FakeTvSeriesDetail_8(
              this,
              Invocation.getter(#tvSeries),
            ),
          )
          as _i10.TvSeriesDetail);

  @override
  _i13.RequestState get tvSeriesState =>
      (super.noSuchMethod(
            Invocation.getter(#tvSeriesState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  List<_i12.TvSeries> get tvSeriesRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#tvSeriesRecommendations),
            returnValue: <_i12.TvSeries>[],
          )
          as List<_i12.TvSeries>);

  @override
  _i13.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i13.RequestState.Empty,
          )
          as _i13.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchTvSeriesDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchTvSeriesDetail, [id]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> addWatchlist(_i10.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [tvSeries]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> removeFromWatchlist(_i10.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [tvSeries]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> loadWatchlistStatus(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
